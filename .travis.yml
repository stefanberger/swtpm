env:
  global:
  - secure: mcAXlw5k/1yOP2RMKWEtvU2SnsuHo5Idoi5zZ+hLj2CzdvT77Wh8HWQ7NRsiamL+3dMPxzzy60IYNZQ8F29y3rvN7gASVsYn31G5UkmfvpPLiucuPADM1rNm8FYNlia0GFW4keP+LwMrBo6KDK9k0T8w4lquXBwMmNzhvCYVwkBIM5YwhXW5nk1dOJtf6zAb6gDH/VNEYTXXRKjA5Jvln7+EVHY61pEx6rJGa2GU0A49ms5UMJVzv85FraiHwlCPnNhQWGJ6sStqxsd5i6VBTCrkwMqnnA+ZBosqIJkBXp4OkudfPWE9vsn7TtuYdbheOkUIv6GRPFJNG3Vm3Wh/IwvSOILS5xAmsB3MxyK3BlILOYcsywiSzV5J4+s5Vnih4FaRQ3xx46Fq2ldatuk7npIxfdd3Co5V1KZh1pq3ckAdKlY2PEsQc0Kh72Lxf2N0XVw4s0H7gzrFk4/ghIvoCmAWBRSrN+R7wleEcmxDRgUZHP6Qc2ZNP+kljhBLqzinW2jyxPAqQS17g5Tb01+WfqkG/T5jboyIIe/OEQ5XbQp3/d8rUA8STpJxD25lwKKqlIqU3ZFWYfRT+pA0x83AdiTm53CJSQqFyCLtZCqK0XSZbLfmFzjZJ7I8FQxZoF2o03DDkL1Xs0z0sj87i3UnsYzxGdSrcU2JDK7qRIn39sM=
sudo: required
language: c
dist: xenial
addons:
  apt:
      packages:
        - pep8
        - automake
        - autoconf
        - libtool
        - libssl-dev
        - sed
        - make
        - gawk
        - sed
        - bash
        - dh-exec
        - python-twisted
        - libfuse-dev
        - libglib2.0-dev
        - libgmp-dev
        - expect
        - libtasn1-dev
        - socat
        - findutils
        - tpm-tools
        - gnutls-dev
        - gnutls-bin
        - libasan2
        - softhsm2
  coverity_scan:
    project:
      name: swtpm
      description: Build submitted via Travis CI
    notification_email: stefanb@linux.vnet.ibm.com
    build_command_prepend: "./autogen.sh --with-openssl; make clean"
    build_command: make -j4
    branch_pattern: coverity_scan
script:
  - git clone https://github.com/stefanberger/libtpms
  - cd libtpms
  - CFLAGS="${LIBTPMS_CFLAGS:--g -O2}" LDFLAGS="${LIBTPMS_LDFLAGS}"
       ./autogen.sh --with-openssl --prefix=${LIBTPMS_PREFIX:-/usr} --with-tpm2
       && make -j$(${NPROC:-nproc})
       && sudo make install
  - cd ..
  - ./autogen.sh ${CONFIG}
      && ${SUDO} make clean
      && export SWTPM_TEST_EXPENSIVE=${SWTPM_TEST_EXPENSIVE:-1}
      && ${SUDO} make -j$(${NPROC:-nproc}) ${CHECK}
  - if [ -n "${RUN_TEST}" ]; then
        sudo make install
        && sudo ${PREFIX}/bin/swtpm_setup
              --tpmstate /tmp --create-ek-cert --create-platform-cert
              --runas ${TSS_USER:-tss} --tpm2
         || { exit 1; };
    fi
after_failure:
  - for f in tests/*.log; do echo ">>>>>>> $f <<<<<<<"; cat $f; done
matrix:
  include:
    - env: PREFIX="/usr"
           CONFIG="--with-openssl --prefix=${PREFIX}"
           CHECK="distcheck"
           RUN_TEST="1"
      before_script:
      - pep8 $(find . -type f | grep -E "\.py$")
    - env: PREFIX="/usr"
           CONFIG="--with-openssl --prefix=/usr --enable-test-coverage"
           SUDO="sudo"
           CHECK="check"
      before_script:
      - sudo pip install cpp-coveralls
      after_success:
      - sudo coveralls --gcov-options '\-lp'
    - env: CFLAGS="-fsanitize=address -g -fno-omit-frame-pointer"
           LIBS="-lasan"
           PREFIX="/usr"
           CONFIG="--with-openssl --prefix=${PREFIX}"
           SUDO="sudo"
           CHECK="check"
      before_script:
        # Tspi_NV_WriteValue has an I/O error when using asan
        - echo -e '#!/usr/bin/env bash\nexit 0' > tests/test_parameters
    - env: CFLAGS="-fsanitize=undefined -g -fno-omit-frame-pointer -fno-sanitize-recover"
           LIBS="-lubsan"
           PREFIX="/usr"
           CONFIG="--with-openssl --prefix=${PREFIX}"
           SUDO="sudo"
           CHECK="check"
    - env: NPROC="sysctl -n hw.ncpu"
           LIBTPMS_CFLAGS="-I/usr/local/opt/openssl/include"
           LIBTPMS_LDFLAGS="-L/usr/local/opt/openssl/lib"
           LIBTPMS_PREFIX="${HOME}"
           CFLAGS="-I/usr/local/opt/openssl/include -I${HOME}/include"
           LDFLAGS="-L/usr/local/opt/openssl/lib -L${HOME}/lib"
           PKG_CONFIG_PATH="${HOME}/lib/pkgconfig"
           PREFIX="${HOME}"
           TSS_USER=$(id -u -n)
           CONFIG="--with-openssl --prefix=${PREFIX} --with-tss-user=${TSS_USER} --with-tss-group=$(id -g -n)"
           SWTPM_TEST_EXPENSIVE=0
           CHECK="check"
           LD_LIBRARY_PATH=${PREFIX}/lib:${PREFIX}/lib/swtpm
           RUN_TEST="1"
           SUDO="sudo"
      os: osx
      compiler: clang
      before_script:
      - brew upgrade gnutls
      - brew install expect
      - brew install libtasn
      - brew install glib
      - brew install gawk
      - brew install gmp
      - brew tap discoteq/discoteq
      - brew install flock
      - brew install socat
      # To run the pkcs11 test with softhsm we need SUDO (above)
      - brew install softhsm
