runs:
  using: "composite"
  steps:
    - name: Build and test
      shell: bash
      run: |
        sudo apt-get -y update
        sudo apt-get -y install automake autoconf libtool libssl-dev sed make gawk \
          sed bash dh-exec python3-pip libfuse-dev libglib2.0-dev libjson-glib-dev \
          libgmp-dev expect libtasn1-dev socat findutils gnutls-dev gnutls-bin softhsm2 \
          libseccomp-dev tss2 ${PACKAGES}
        if [ ! -d libtpms ]; then
          git clone https://github.com/stefanberger/libtpms;
        fi
        pushd libtpms
          if [ -n "${LIBTPMS_GIT_CHECKOUT}" ]; then
            git checkout "${LIBTPMS_GIT_CHECKOUT}" -b testing;
          fi
          CFLAGS="${LIBTPMS_CFLAGS:--g -O2}" LDFLAGS="${LIBTPMS_LDFLAGS}" \
            ./autogen.sh --with-openssl --prefix=${LIBTPMS_PREFIX:-/usr} --with-tpm2 ${LIBTPMS_CONFIG}
          make -j$(${NPROC:-nproc})
          sudo make install
        popd
        ./autogen.sh ${CONFIG}
        ${SUDO} make clean
        export SWTPM_TEST_EXPENSIVE=${SWTPM_TEST_EXPENSIVE:-1}
        export SWTPM_TEST_IBMTSS2=${SWTPM_TEST_IBMTSS2:-0}
        export SWTPM_TEST_STORE_VOLATILE=${SWTPM_TEST_STORE_VOLATILE:-0}
        set +e
        ${SUDO:+${SUDO} -E} make -j$(${NPROC:-nproc}) ${CHECK} VERBOSE=1
        if [ $? -ne 0 ]; then
          for f in swtpm/tests/*.log; do echo ">>>>>>> $f <<<<<<<"; tail -n 50 $f; done
          exit 1
        fi
        set -e
        if [ -n "${COVERALLS_REPO_TOKEN}" ]; then
          uidgid="$(id -nu):$(id -ng)"
          sudo chown -R ${uidgid} ./
          pip install setuptools==59.6.0  # Default Jammy version
          pip install cpp-coveralls
          cpp-coveralls -e libtpms --gcov-options '\-lp'
        fi
        if [ -n "${RUN_TEST}" ]; then
          sudo make install
          sudo ${PREFIX}/bin/swtpm_setup \
                --tpmstate /tmp --create-ek-cert --create-platform-cert --tpm2 || exit 1
        fi
