#!/usr/bin/env bash

if [ ${SWTPM_TEST_EXPENSIVE:-0} -eq 0 ]; then
	exit 77
fi

ROOT=${abs_top_builddir:-$(pwd)/..}
TESTDIR=${abs_top_testdir:-$(dirname "$0")}

function cleanup() {
	if [ -n "${SWTPM_PID}" ]; then
		kill -9 ${SWTPM_PID}
	fi
	if [ -n "${SWTPM1_PID}" ]; then
		kill -9 ${SWTPM1_PID}
	fi
	if [ -n ${WORKDIR} ]; then
		rm -rf ${WORKDIR}
	fi
}

trap "cleanup" EXIT

source ${TESTDIR}/common

WORKDIR=$(mktemp -d)
TESTLOG=${WORKDIR}/test.log

# variables used by the TPM 1.2 test suite
TPM_SERVER_PORT=65440
TPM_SERVER_NAME=localhost
SLAVE_TPM_PORT=65442
SLAVE_TPM_SERVER=localhost

SWTPM_INTERFACE=socket+socket

# Start main TPM 1.2
SWTPM_SERVER_PORT=${TPM_SERVER_PORT}
SWTPM_SERVER_NAME=${TPM_SERVER_NAME}
SWTPM_CTRL_PORT=65441

mkdir -p ${WORKDIR}/tpm12.1
SWTPM_SERVER_NO_DISCONNECT="1" run_swtpm ${SWTPM_INTERFACE} \
	--tpmstate dir=${WORKDIR}/tpm12.1 \
	--flags not-need-init
SWTPM1_PID=${SWTPM_PID}

# Start 2nd TPM 1.2
SWTPM_SERVER_PORT=${SLAVE_TPM_PORT}
SWTPM_SERVER_NAME=${SLAVE_TPM_SERVER}
SWTPM_CTRL_PORT=65443

mkdir -p ${WORKDIR}/tpm12.2
SWTPM_SERVER_NO_DISCONNECT="1" run_swtpm ${SWTPM_INTERFACE} \
	--tpmstate dir=${WORKDIR}/tpm12.2 \
	--flags not-need-init

pushd ${WORKDIR} &>/dev/null

curl -sJOL https://sourceforge.net/projects/ibmswtpm/files/tpm4769tar.gz/download
tar -xzf tpm4769tar.gz

pushd libtpm &>/dev/null

pushd lib &>/dev/null
patch -p0 < ${TESTDIR}/patches/lib.patch
popd &>/dev/null

./autogen
LIBS="" CFLAGS="-g -O2" ./configure
make -j$(nproc)

pushd utils &>/dev/null

ln -s makeidentity identity

for tst in 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 23; do
    echo "Running test ${tst}"
    PATH=$PWD:$PATH \
       TPM_SERVER_PORT=${TPM_SERVER_PORT} TPM_SERVER_NAME=${TPM_SERVER_NAME} \
       SLAVE_TPM_PORT=${SLAVE_TPM_PORT} SLAVE_TPM_SERVER=${SLAVE_TPM_SERVER} \
       ./test_console.sh \
           --non-interactive \
           ${tst} >> ${TESTLOG}
    if [ -n "$(grep "ERROR" ${TESTLOG})" ]; then
        echo "Error occurred!"
        cat ${TESTLOG}
        exit 1
    fi
done

popd &>/dev/null
popd &>/dev/null

echo "OK"
exit 0
